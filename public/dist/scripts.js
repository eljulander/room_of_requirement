"use strict";var config={apiKey:"AIzaSyCRfRp20kEkpwO1Bs30sDyBkC4Qf-rsuNM",authDomain:"course-file-auditor.firebaseapp.com",databaseURL:"https://course-file-auditor.firebaseio.com",storageBucket:"course-file-auditor.appspot.com"};firebase.initializeApp(config);var database=firebase.database();
"use strict";var corrData={16149:"HFED 340",16150:"B 275",16152:"B 101",16153:"B 424",16154:"B 380",16155:"B 129",16156:"B 100",16158:"B 499A",16161:"B 448",16162:"FHGEN 270",16164:"FAML 360",16165:"FAML 430",16166:"HFED 101",16167:"ME 201",16170:"B 183",16173:"FHGEN 251D",16175:"FHGEN 112",16176:"B 211",16177:"FAML 460",16178:"FHGEN 120",16179:"B 250",16180:"FAML 400",16181:"FHGEN 160",16182:"FHGEN 211",16183:"FAML 445",16185:"B 283",16187:"FHGEN 130",16188:"FHGEN 399",16189:"B 401",16190:"FHGEN 251A",16191:"FAML 498R",16192:"B 341",16193:"FHGEN 251B",16195:"FHGEN 251C",16196:"B 370",16197:"CHILD 320",16198:"FHGEN 252B",16199:"B 301",16200:"FAML 300",16201:"FHGEN 212",16202:"B 321",16203:"oops",16204:"FHGEN 140",16205:"B 361",16207:"FDMAT 112",16208:"CHILD 300",16209:"FAML 100",16211:"CHILD 210",16212:"B 424D",16213:"ECON 150",16214:"AGBUS 105",16215:"FHGEN 111",16216:"FAML 160",16218:"B 100",16219:"ECON 151",16221:"B 410",19492:"B 428",23800:"CS 313",23801:"FDHUM 110",33923:"B 499B",40664:"FAML 200",42377:"FDMAT 108",50273:"HS 390",50274:"FDWLD 201",50275:"ENG 252",50276:"FDINT 211",50277:"FDWLD 101",50279:"ANTH 101",50281:"CIT 370",50283:"FDSCI 101",50284:"ED 200",50286:"FDSCI 201",50289:"AUTO 125",50290:"HS 310",57713:"POLSC 110",57714:"CIT 230",58369:"BIO 265L",58371:"COMM 273",58372:"BIO 264L",59655:"HS 280",59656:"COMM 175",59657:"CIT 160",59658:"FDENG 301",59659:"COMM 125",61065:"FDSCI 203",61373:"NUTR 150",61374:"MA 106",61375:"HS 285",61376:"PSYCH 112",61377:"CIT 110",61378:"WDD 100",61380:"CIT 111",61381:"CIT 336",61908:"PSYCH 111",61909:"ED 312",61910:"FDSCI 205",61911:"CIT 240",61920:"HS 391",61928:"SOC 111",61929:"MATH 221A",62216:"HRHP 131",62217:"MATH 221C",62218:"COMM 130",62453:"COMM 102",62586:"MATH 221B",63193:"B 220",63194:"CIT 260",63195:"HS 320",63196:"HS 370",63419:"CIT 225",63581:"FAML 220",63921:"PSYCH 201",67126:"HS 460",67127:"BIO 221",67128:"HS 465",67129:"COMM 310",67130:"HS 401",67131:"HS 425",67132:"CIT 241",67133:"PSYCH 302",67134:"COMM 111",67135:"PSYCH 311",67136:"POLSC 150",67138:"HS 345",67139:"ED 202",67140:"RM 304",74838:"COMM 307",81222:"CHILD 310",81805:"CIT 261",99480:"HS 240",99482:"AGBUS 138",99483:"BIO 375",99484:"FDREL 100",99485:"POLSC 170",99486:"RM 307",99487:"ENG 325",99488:"COMM 352",99489:"RM 471",99530:"BIO 265",100806:"MA 107",100807:"BIO 264",105615:"TA 402",105706:"CIT 262",106277:"CIT 381",106278:"MA 105",106279:"COMM 150",106280:"CIT 325",106281:"CIT 352",106282:"COMM 250",106283:"RM 371",106284:"COMM 289",106285:"COMM 450",106286:"RM 370",106287:"SOC 112",106288:"AGBUS 180A",106290:"BIO 475",106291:"BIO 381",106292:"HS 375",106293:"RM 373R",106294:"RM 472",106295:"MA 205",106296:"HS 420",106297:"HS 378",106298:"ENG 355",106300:"MA 111",106301:"ENG 335",106303:"oops",106989:"ENG 251",108133:"B 101",108134:"FAML 100",108135:"FAML 220",108136:"FDENG 301",108137:"FDREL 121",108138:"FDREL 122",108139:"FDSCI 203",108140:"ENG 332",108142:"CIT 110",108143:"FDHUM 110",108144:"FDSCI 201",108599:"TA 116",109633:"FDSCI 101",109641:"ENG 314"};
"use strict";!function(){function e(){if(firebase.auth().currentUser)localStorage.removeItem("ManagementAuthO"),firebase.auth().signOut();else{var e=new firebase.auth.GoogleAuthProvider;e.addScope("https://www.googleapis.com/auth/plus.login"),e.addScope("profile"),e.addScope("email"),firebase.auth().signInWithRedirect(e)}document.getElementById("quickstart-sign-in").disabled=!0}function t(e,t){database.ref("users").once("value",function(i){i.forEach(function(i){i.key===e&&(i.val().role||t())})})}function i(){firebase.auth().getRedirectResult().then(function(e){if(e.credential){var t=e.credential.accessToken;location.reload(),console.log(t)}e.user})["catch"](function(e){var t=e.code;e.message,e.email,e.credential;"auth/account-exists-with-different-credential"===t?alert("You have already signed up with a different auth provider for that email."):console.error(e)}),firebase.auth().onAuthStateChanged(function(e){if(e){var i={displayName:e.displayName,email:e.email,emailVerified:e.emailVerified,photoURL:e.photoURL,uid:e.uid};document.getElementById("quickstart-sign-in").textContent="Sign out",database.ref("users/"+i.uid).update({displayName:i.displayName,email:i.email,emailVerified:i.emailVerified,photoURL:i.photoURL,uid:i.uid}),t(i.uid,function(){database.ref("users/"+i.uid).update({role:0})}),localStorage.ManagementAuthO=JSON.stringify(i)}else document.getElementById("quickstart-sign-in").textContent="Sign in with Google";document.getElementById("quickstart-sign-in").disabled=!1}),document.getElementById("quickstart-sign-in").addEventListener("click",e,!1)}window.onload=function(){i()}}();
"use strict";!function(){function a(){var a=$("<input></input>");return a.keyup(function(a){$("#userNames").html("");for(var e=a.target.value,n=a.target,t=0;t<o.length;t++)if(o[t].includes(e)){var r=$("<p>"+o[t]+"</p>");r.attr("id","empName").click(function(a){$(n).val(a.target.innerText)}),$("#userNames").append(r)}}),a}function e(a){var e=a.target,n=$(e).attr("data-courseid");database.ref("Mark's Tool/"+n).update({checker:""}),$(a.target).css({display:"none"})}function n(n,t,r){var c,s=$("#"+r),o=$('<label data-courseID="'+t+'"><a target="_blank" href="'+n.Link+'">'+corrData[t]+"</a></label>");""!==n.checker&&"checkedOut"===r&&database.ref("users/"+n.checker).once("value",function(a){var n=a.val().displayName;o.append("<p>"+n+"</p>").append(" &times;").css({cursor:"pointer"}).click(e)}),"unassigned"===r&&(c=a()),o.append(c),s.append(o)}function t(){database.ref("Mark's Tool").on("value",function(a){a.forEach(function(a){var e=a.val(),t=a.key,r="There is nothing here!";e["Content Pages"]===r&&e.Quizzes===r||"Pending"===e.status&&(e.checker?n(e,t,"checkedOut"):n(e,t,"unassigned"))})})}function r(a){var e=a.target.parentElement,n=e.getAttribute("data-courseid");database.ref("Mark's Tool/"+n).update({status:"Designer Approved"}),a.target.style.display="none"}function c(){database.ref("Mark's Tool").once("value",function(a){a.forEach(function(a){var e=a.val(),n=e.Completed,t=e.status;"Designer Approved"===t?i[t](e,a.key):"True"===n&&i["Student Approved"](e,a.key)})})}function s(){database.ref("users").once("value",function(a){a.forEach(function(a){var e=a.val().displayName;o.push(e)})})}var o=[];$("a").click(function(a){var e=a.target.className;$("#"+e).css({display:"block"}),$("#shade").css({display:"block"})}),$(".checked").click(function(a){$("#namePopup").css({display:"block"})}),$(".cancel").click(function(a){var e=a.target.parentElement;$(e).css({display:"none"}),$("#shade").css({display:"none"}),$("#namePopup").css({display:"none"})}),$("#assign").click(function(a){var e,n=$("[data-courseid] > input");$.each(n,function(a,n){var t=n.value,r=n.parentElement.getAttribute("data-courseid");database.ref("users").once("value",function(a){e=a.val();for(var n in e)e[n].displayName===t&&database.ref("Mark's Tool/"+r).update({checker:e[n].uid})})})});var i={"Student Approved":function(a,e){var n=$('<label data-courseID="'+e+'"><a target="_blank" href="'+a.Link+'">'+corrData[e]+"</a></label>"),t=$("<span>&#x2713;</span>");$(t).css({cursor:"pointer"}).click(r),$(n).append(t),$("#completed").append(n)},"Designer Approved":function(a,e){$("#approved").append('<label data-courseID="'+e+'"><a target="_blank" href="'+a.Link+'">'+corrData[e]+"</a></label>")}};location.pathname.includes("admin")&&(s(),t(),c(),a())}();
"use strict";
"use strict";!function(){var n,o,t=JSON.parse(localStorage.ManagementAuthO)||"",i=$("nav"),a=$("<button>Home</button>");a.click(function(n){var o=location.origin;location.assign(o+"/index.html")}),i.append(a),database.ref("users/"+t.uid).once("value",function(t){n=t.val().role,o=$("<button>Admin</button>"),n>=8&&(console.log("User logged in is Administrator"),o.click(function(n){console.log("li");var o=n.target.innerText.toLowerCase(),t=location.origin;location.assign(t+"/"+o+".html")}),i.append(o))})}();
//# sourceMappingURL=data:application/json;base64,
