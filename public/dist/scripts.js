"use strict";var config={apiKey:"AIzaSyCRfRp20kEkpwO1Bs30sDyBkC4Qf-rsuNM",authDomain:"course-file-auditor.firebaseapp.com",databaseURL:"https://course-file-auditor.firebaseio.com",storageBucket:"course-file-auditor.appspot.com"};firebase.initializeApp(config);var database=firebase.database();
"use strict";var corrData={16149:"HFED 340",16150:"B 129",16152:"B 380",16153:"B 275",16154:"B 424",16155:"B 101",16156:"B 100",16158:"B 499A",16161:"FHGEN 270",16162:"B 448",16163:"B 201",16164:"FAML 360",16165:"FAML 430",16166:"HFED 101",16167:"ME 201",16170:"B 183",16171:"B 212",16173:"FAML 460",16175:"FHGEN 251D",16176:"FHGEN 112",16177:"B 211",16178:"B 250",16179:"FHGEN 120",16180:"FAML 400",16181:"FHGEN 130",16182:"FHGEN 160",16183:"FHGEN 211",16184:"B 240",16185:"B 283",16187:"FAML 445",16188:"FHGEN 399",16189:"FHGEN 212",16190:"FHGEN 251A",16191:"B 401",16192:"B 341",16193:"FAML 498R",16195:"FHGEN 251B",16196:"FHGEN 251C",16197:"B 301",16198:"B 370",16199:"CHILD 320",16200:"FAML 300",16201:"FHGEN 252B",16202:"B 321",16203:"FDMAT 108",16204:"B 361",16207:"FHGEN 140",16208:"FDMAT 112",16209:"CHILD 300",16211:"B 424D",16212:"CHILD 210",16213:"FAML 100",16214:"ECON 150",16215:"AGBUS 105",16216:"FHGEN 111",16218:"FAML 160",16219:"ECON 151",16221:"B 100",19492:"FDHUM 110",23800:"B 410",23801:"B 428",33923:"CS 313",40664:"FAML 200",42377:"B 499B",50273:"HS 390",50274:"FDWLD 101",50275:"FDWLD 201",50276:"FDINT 211",50277:"ENG 252",50278:"ED 202",50279:"ED 200",50281:"FDSCI 101",50282:"HS 240",50283:"ANTH 101",50284:"AUTO 125",50285:"CIT 360",50286:"CIT 370",50289:"FDSCI 201",50290:"HS 310",57713:"CIT 230",57714:"POLSC 110",58369:"BIO 265L",58370:"BIO 264",58371:"BIO 264L",58372:"COMM 273",59655:"HS 280",59656:"COMM 175",59657:"CIT 160",59658:"HRHP 131",59659:"FDENG 301",61065:"COMM 125",61373:"MA 106",61374:"FDSCI 203",61375:"NUTR 150",61376:"HS 285",61377:"PSYCH 112",61378:"WDD 100",61380:"CIT 110",61381:"CIT 111",61382:"SPED 310",61908:"PSYCH 111",61909:"CIT 336",61910:"ED 312",61911:"FDSCI 205",61920:"HS 391",61928:"CIT 240",61929:"SOC 111",62216:"MATH 221A",62217:"MATH 221B",62218:"MATH 221C",62453:"COMM 130",62586:"B 220",63193:"COMM 102",63194:"CIT 225",63195:"CIT 260",63196:"HS 320",63419:"PSYCH 201",63581:"HS 370",63921:"FAML 220",64185:"COMM 102",67126:"COMM 310",67127:"HS 460",67128:"BIO 221",67129:"HS 401",67130:"HS 425",67131:"HS 465",67132:"PSYCH 302",67133:"PSYCH 311",67134:"CIT 241",67135:"COMM 111",67136:"HS 345",67137:"MA 105",67138:"POLSC 150",67139:"RM 304",67140:"COMM 307",74838:"ED 202",81222:"CHILD 310",81805:"HS 240",99480:"CIT 261",99482:"POLSC 170",99483:"AGBUS 138",99484:"BIO 375",99485:"FDREL 100",99486:"MA 107",99487:"ENG 325",99488:"RM 307",99489:"COMM 352",99530:"RM 471",100806:"BIO 264",100807:"BIO 265",105615:"TA 402",105706:"MA 105",106277:"CIT 262",106278:"CIT 325",106279:"CIT 352",106280:"CIT 381",106281:"COMM 150",106282:"COMM 250",106283:"COMM 289",106284:"COMM 450",106285:"RM 370",106286:"RM 371",106287:"RM 472",106288:"AGBUS 180A",106289:"AGBUS 180B",106290:"SOC 112",106291:"BIO 381",106292:"BIO 475",106293:"RM 373R",106294:"HS 375",106295:"HS 378",106296:"HS 420",106297:"MA 111",106298:"MA 205",106299:"ENG 332",106300:"ENG 335",106301:"ENG 355",106302:"ED 313",106303:"ENG 251",106989:"ENG 332",109633:"ENG 314",109641:"TA 116"};
"use strict";!function(){function e(){if(firebase.auth().currentUser)localStorage.removeItem("ManagementAuthO"),firebase.auth().signOut();else{var e=new firebase.auth.GoogleAuthProvider;e.addScope("https://www.googleapis.com/auth/plus.login"),e.addScope("profile"),e.addScope("email"),firebase.auth().signInWithRedirect(e)}document.getElementById("quickstart-sign-in").disabled=!0}function t(e,t){database.ref("users").once("value",function(i){i.forEach(function(i){i.key===e&&(i.val().role||t())})})}function i(){firebase.auth().getRedirectResult().then(function(e){if(e.credential){var t=e.credential.accessToken;location.reload(),console.log(t)}e.user})["catch"](function(e){var t=e.code;e.message,e.email,e.credential;"auth/account-exists-with-different-credential"===t?alert("You have already signed up with a different auth provider for that email."):console.error(e)}),firebase.auth().onAuthStateChanged(function(e){if(e){var i={displayName:e.displayName,email:e.email,emailVerified:e.emailVerified,photoURL:e.photoURL,uid:e.uid};document.getElementById("quickstart-sign-in").textContent="Sign out",database.ref("users/"+i.uid).update({displayName:i.displayName,email:i.email,emailVerified:i.emailVerified,photoURL:i.photoURL,uid:i.uid}),t(i.uid,function(){database.ref("users/"+i.uid).update({role:0})}),localStorage.ManagementAuthO=JSON.stringify(i)}else document.getElementById("quickstart-sign-in").textContent="Sign in with Google";document.getElementById("quickstart-sign-in").disabled=!1}),document.getElementById("quickstart-sign-in").addEventListener("click",e,!1)}window.onload=function(){i()}}();
"use strict";!function(){function e(){database.ref("users").once("value",function(e){e.forEach(function(e){var a=e.val().displayName;o.push(a)})})}function a(){var e=$("<input></input>");return e.keyup(function(e){$("#userNames").html("");for(var a=e.target.value.toLowerCase(),t=e.target,n=0;n<o.length;n++){var r=o[n].toLowerCase();if(r.includes(a)){var s=$("<p>"+o[n]+"</p>");s.attr("id","empName").click(function(e){$(t).val(e.target.innerText)}),$("#userNames").append(s)}}}),e}function t(e){var a=e.target,t=$(a).attr("data-courseid");console.log(a,t,a.parentElement),database.ref("Mark's Tool/"+t).update({checker:""}),$(a).css({display:"none"})}function n(e,n,r){console.log(e,n,r);var s,o=$("#"+r),c=$('<label data-courseID="'+n+'"><a target="_blank" href="'+e.Link+'">'+corrData[n]+"</a></label>"),l=$("<p> &times;</p>");""!==e.checker&&"checkedOut"===r&&database.ref("users/"+e.checker).once("value",function(e){var a=e.val().displayName;l.css({cursor:"pointer"}).click(t),c.append("<p>"+a+"</p>").append(l)}),"unassigned"===r&&(s=a()),c.append(s),o.append(c)}function r(e){var a=e.target.parentElement,t=a.getAttribute("data-courseid");database.ref("Mark's Tool/"+t).update({status:"Designer Approved"}),e.target.style.display="none"}function s(){var e=$(".chart");new Chart(e,{type:"line",data:l,options:i})}var o=[];$("a[href='#']").click(function(e){var a=e.target.className;"checked"===a&&$("#namePopup").css({display:"block"}),$("#"+a).css({display:"block"}),$("#shade").css({display:"block"})}),$(".cancel").click(function(e){var a=e.target.parentElement;$("#namePopup").css({display:"none"}),$(a).css({display:"none"}),$("#shade").css({display:"none"})}),$("#assign").click(function(e){var a=$("[data-courseid] > input");$.each(a,function(e,t){var n=t.value,r=t.parentElement.getAttribute("data-courseid");database.ref("users").once("value",function(s){s.val();s.forEach(function(s){var o=s.val();if(n===o.displayName){var c=s.key;database.ref("Mark's Tool/"+r).update({checker:c}),console.log(t.parentElement),t.parentElement.style.display="none"}a[e].value=""})})})});var c={"Student Approved":function(e,a){var t=$('<label data-courseID="'+a+'"><a target="_blank" href="'+e.Link+'">'+corrData[a]+"</a></label>"),n=$("<span>&#x2713;</span>");$(n).css({cursor:"pointer"}).click(r),$(t).append(n),$("#completed").append(t)},"Designer Approved":function(e,a){$("#approved").append('<label data-courseID="'+a+'"><a target="_blank" href="'+e.Link+'">'+corrData[a]+"</a></label>")}},l={datasets:[{label:"Data Saved",backgroundColor:"rgba(75,192,192,0.4)",borderColor:"rgba(33, 98, 98, 0.4)",data:[{x:-10,y:0},{x:0,y:10},{x:10,y:5}]},{label:"Time Spent",backgroundColor:"rgba(23, 56, 234, 0.4)",borderColor:"rgba(0, 11, 72, 0.4)",data:[{x:-10,y:1},{x:4,y:10},{x:9,y:5}]}]},i={responsive:!0,scales:{xAxes:[{type:"linear",position:"bottom",scaleLabel:{display:!0,labelString:"Months"}}],yAxes:[{type:"linear",position:"left",scaleLabel:{display:!0,labelString:""}}]}};location.pathname.includes("admin")&&(e(),database.ref("Mark's Tool").on("child_added",function(e){var a=e.val(),t=e.key,r="There is nothing here!";a.status||database.ref("Mark's Tool/"+t).update({status:"Pending",time_spent:0,Completed:"False",data_saved:0,checker:""}),a["Content Pages"]===r&&a.Quizzes===r||"Pending"===a.status&&(a.checker?n(a,t,"checkedOut"):n(a,t,"unassigned"))}),database.ref("Mark's Tool").on("child_changed",function(e){var a=e.val(),t=e.key;console.log("Occuring"),n(a,t,"checkedOut")}),database.ref("Mark's Tool").once("value",function(e){e.forEach(function(e){var a=e.val();"Designer Approved"===a.status?c["Designer Approved"](a,e.key):"True"!==a.Completed&&"Student Approved"!==a.status||c["Student Approved"](a,e.key)})}),s(),a())}();
"use strict";
"use strict";!function(){var n,o,t=JSON.parse(localStorage.ManagementAuthO)||"",i=$("nav"),a=$("<button>Home</button>");a.click(function(n){var o=location.origin;location.assign(o+"/index.html")}),i.append(a),database.ref("users/"+t.uid).once("value",function(t){n=t.val().role,o=$("<button>Admin</button>"),n>=8&&(console.log("User logged in is Administrator"),o.click(function(n){console.log("li");var o=n.target.innerText.toLowerCase(),t=location.origin;location.assign(t+"/"+o+".html")}),i.append(o))})}();
//# sourceMappingURL=data:application/json;base64,
