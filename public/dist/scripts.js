"use strict";var config={apiKey:"AIzaSyCRfRp20kEkpwO1Bs30sDyBkC4Qf-rsuNM",authDomain:"course-file-auditor.firebaseapp.com",databaseURL:"https://course-file-auditor.firebaseio.com",storageBucket:"course-file-auditor.appspot.com"};firebase.initializeApp(config);var database=firebase.database();
"use strict";!function(){function e(){if(firebase.auth().currentUser)localStorage.removeItem("ManagementAuthO"),firebase.auth().signOut();else{var e=new firebase.auth.GoogleAuthProvider;e.addScope("https://www.googleapis.com/auth/plus.login"),e.addScope("profile"),e.addScope("email"),firebase.auth().signInWithRedirect(e)}document.getElementById("quickstart-sign-in").disabled=!0}function t(e,t){database.ref("users").once("value",function(i){i.forEach(function(i){i.key===e&&(i.val().role||t())})})}function i(){firebase.auth().getRedirectResult().then(function(e){if(e.credential){var t=e.credential.accessToken;location.reload(),console.log(t)}e.user})["catch"](function(e){var t=e.code;e.message,e.email,e.credential;"auth/account-exists-with-different-credential"===t?alert("You have already signed up with a different auth provider for that email."):console.error(e)}),firebase.auth().onAuthStateChanged(function(e){if(e){var i={displayName:e.displayName,email:e.email,emailVerified:e.emailVerified,photoURL:e.photoURL,uid:e.uid};document.getElementById("quickstart-sign-in").textContent="Sign out",database.ref("users/"+i.uid).update({displayName:i.displayName,email:i.email,emailVerified:i.emailVerified,photoURL:i.photoURL,uid:i.uid}),t(i.uid,function(){database.ref("users/"+i.uid).update({role:0})}),localStorage.ManagementAuthO=JSON.stringify(i)}else document.getElementById("quickstart-sign-in").textContent="Sign in with Google";document.getElementById("quickstart-sign-in").disabled=!1}),document.getElementById("quickstart-sign-in").addEventListener("click",e,!1)}window.onload=function(){i()}}();
"use strict";!function(){function n(){console.log("checked")}function c(){console.log("finished")}function o(){console.log("dataSaved")}function e(){console.log("timeSpent")}$("a").click(function(n){var c=n.target.className;$("#"+c).css({display:"block"}),$("#shade").css({display:"block"})}),$(".cancel").click(function(n){var c=n.target.parentElement;$(c).css({display:"none"}),$("#shade").css({display:"none"})}),location.pathname.includes("admin")&&(n(),c(),o(),e())}();
"use strict";!function(){var n,o,t=JSON.parse(localStorage.ManagementAuthO),i=$("nav"),a=$("<button>Home</button>");a.click(function(n){var o=location.origin;location.assign(o+"/index.html")}),i.append(a),database.ref("users/"+t.uid).once("value",function(t){n=t.val().role,o=$("<button>Admin</button>"),n>=8&&(console.log("User logged in is Administrator"),o.click(function(n){console.log("li");var o=n.target.innerText.toLowerCase(),t=location.origin;location.assign(t+"/"+o+".html")}),i.append(o))})}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyIsImxvZ2luLmpzIiwiYWRtaW4uanMiLCJuYXZpZ2F0aW9uLmpzIl0sIm5hbWVzIjpbImNvbmZpZyIsImFwaUtleSIsImF1dGhEb21haW4iLCJkYXRhYmFzZVVSTCIsInN0b3JhZ2VCdWNrZXQiLCJmaXJlYmFzZSIsImluaXRpYWxpemVBcHAiLCJkYXRhYmFzZSIsInRvZ2dsZVNpZ25JbiIsImF1dGgiLCJjdXJyZW50VXNlciIsImxvY2FsU3RvcmFnZSIsInJlbW92ZUl0ZW0iLCJzaWduT3V0IiwicHJvdmlkZXIiLCJHb29nbGVBdXRoUHJvdmlkZXIiLCJhZGRTY29wZSIsInNpZ25JbldpdGhSZWRpcmVjdCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJkaXNhYmxlZCIsInNldFJvbGUiLCJ1aWQiLCJmdW5jIiwicmVmIiwib25jZSIsInNuYXAiLCJmb3JFYWNoIiwiY3NuYXAiLCJrZXkiLCJ2YWwiLCJyb2xlIiwiaW5pdEFwcCIsImdldFJlZGlyZWN0UmVzdWx0IiwidGhlbiIsInJlc3VsdCIsImNyZWRlbnRpYWwiLCJ0b2tlbiIsImFjY2Vzc1Rva2VuIiwibG9jYXRpb24iLCJyZWxvYWQiLCJjb25zb2xlIiwibG9nIiwidXNlciIsImVycm9yIiwiZXJyb3JDb2RlIiwiY29kZSIsIm1lc3NhZ2UiLCJlbWFpbCIsImFsZXJ0Iiwib25BdXRoU3RhdGVDaGFuZ2VkIiwiYXV0aE8iLCJkaXNwbGF5TmFtZSIsImVtYWlsVmVyaWZpZWQiLCJwaG90b1VSTCIsInRleHRDb250ZW50IiwidXBkYXRlIiwiSlNPTiIsInN0cmluZ2lmeSIsImFkZEV2ZW50TGlzdGVuZXIiLCJ3aW5kb3ciLCJvbmxvYWQiLCJjaGVja2VkIiwiZmluaXNoZWQiLCJkYXRhU2F2ZWQiLCJ0aW1lU3BlbnQiLCIkIiwiY2xpY2siLCJlIiwiY2xhc3NJRCIsInRhcmdldCIsImNsYXNzTmFtZSIsImNzcyIsImRpc3BsYXkiLCJwYXJlbnQiLCJwYXJlbnRFbGVtZW50IiwicGF0aG5hbWUiLCJpbmNsdWRlcyIsImFkbWluQnV0dG9uIiwiYXV0aERhdGEiLCJwYXJzZSIsIm5hdiIsImhvbWVCdXR0b24iLCJyb290Iiwib3JpZ2luIiwiYXNzaWduIiwiYXBwZW5kIiwicGFnZSIsImlubmVyVGV4dCIsInRvTG93ZXJDYXNlIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFBLElBQUlBLFNBQ0FDLE9BQVEsMENBQ1JDLFdBQVksc0NBQ1pDLFlBQWEsNkNBQ2JDLGNBQWUsa0NBRW5CQyxVQUFTQyxjQUFjTixPQUV2QixJQUFJTyxVQUFXRixTQUFTRTtBQ1J4QixjQUFDLFdBRUcsUUFBU0MsS0FDTCxHQUFLSCxTQUFTSSxPQUFPQyxZQVNqQkMsYUFBYUMsV0FBVyxtQkFDeEJQLFNBQVNJLE9BQU9JLGNBVmMsQ0FDOUIsR0FBSUMsR0FBVyxHQUFJVCxVQUFTSSxLQUFLTSxrQkFFakNELEdBQVNFLFNBQVMsOENBQ2xCRixFQUFTRSxTQUFTLFdBQ2xCRixFQUFTRSxTQUFTLFNBQ2xCWCxTQUFTSSxPQUFPUSxtQkFBbUJILEdBTXZDSSxTQUFTQyxlQUFlLHNCQUFzQkMsVUFBVyxFQUc3RCxRQUFTQyxHQUFRQyxFQUFLQyxHQUNsQmhCLFNBQVNpQixJQUFJLFNBQVNDLEtBQUssUUFBUyxTQUFVQyxHQUMxQ0EsRUFBS0MsUUFBUSxTQUFVQyxHQUNmQSxFQUFNQyxNQUFRUCxJQUNUTSxFQUFNRSxNQUFNQyxNQUNiUixTQVdwQixRQUFTUyxLQUNMM0IsU0FBU0ksT0FBT3dCLG9CQUFvQkMsS0FBSyxTQUFVQyxHQUMvQyxHQUFJQSxFQUFPQyxXQUFZLENBRW5CLEdBQUlDLEdBQVFGLEVBQU9DLFdBQVdFLFdBQzlCQyxVQUFTQyxTQUNUQyxRQUFRQyxJQUFJTCxHQUlMRixFQUFPUSxPQVR0QnRDLFNBVVMsU0FBVXVDLEdBQ2YsR0FBSUMsR0FBWUQsRUFBTUUsSUFDSEYsR0FBTUcsUUFDYkgsRUFBTUksTUFDREosRUFBTVIsVUFFTCxtREFBZFMsRUFDQUksTUFBTSw2RUFFTlIsUUFBUUcsTUFBTUEsS0FHdEJ2QyxTQUFTSSxPQUFPeUMsbUJBQW1CLFNBQVVQLEdBQ3pDLEdBQUlBLEVBQU0sQ0FFTixHQUFJUSxJQUNBQyxZQUFhVCxFQUFLUyxZQUNsQkosTUFBT0wsRUFBS0ssTUFDWkssY0FBZVYsRUFBS1UsY0FDcEJDLFNBQVVYLEVBQUtXLFNBQ2ZoQyxJQUFLcUIsRUFBS3JCLElBR2RKLFVBQVNDLGVBQWUsc0JBQXNCb0MsWUFBYyxXQUU1RGhELFNBQVNpQixJQUFULFNBQXNCMkIsRUFBTTdCLEtBQU9rQyxRQUMvQkosWUFBYUQsRUFBTUMsWUFDbkJKLE1BQU9HLEVBQU1ILE1BQ2JLLGNBQWVGLEVBQU1FLGNBQ3JCQyxTQUFVSCxFQUFNRyxTQUNoQmhDLElBQUs2QixFQUFNN0IsTUFHZkQsRUFBUThCLEVBQU03QixJQUFLLFdBQ2ZmLFNBQVNpQixJQUFULFNBQXNCMkIsRUFBTTdCLEtBQU9rQyxRQUMvQnpCLEtBQU0sTUFJZHBCLGFBQUEsZ0JBQWtDOEMsS0FBS0MsVUFBVVAsT0FHakRqQyxVQUFTQyxlQUFlLHNCQUFzQm9DLFlBQWMscUJBRWhFckMsVUFBU0MsZUFBZSxzQkFBc0JDLFVBQVcsSUFFN0RGLFNBQVNDLGVBQWUsc0JBQXNCd0MsaUJBQWlCLFFBQVNuRCxHQUFjLEdBRzFGb0QsT0FBT0MsT0FBUyxXQUNaN0I7QUMvRlIsY0FJQyxXQWdDRyxRQUFTOEIsS0FDTHJCLFFBQVFDLElBQUksV0FNaEIsUUFBU3FCLEtBQ0x0QixRQUFRQyxJQUFJLFlBTWhCLFFBQVNzQixLQUNMdkIsUUFBUUMsSUFBSSxhQU1oQixRQUFTdUIsS0FDTHhCLFFBQVFDLElBQUksYUFqRGhCd0IsRUFBRSxLQUFLQyxNQUFNLFNBQVVDLEdBQ25CLEdBQUlDLEdBQVVELEVBQUVFLE9BQU9DLFNBRXZCTCxHQUFBLElBQU1HLEdBQVdHLEtBQ2JDLFFBQVcsVUFHZlAsRUFBQSxVQUFZTSxLQUNSQyxRQUFXLFlBSW5CUCxFQUFFLFdBQVdDLE1BQU0sU0FBVUMsR0FDekIsR0FBSU0sR0FBU04sRUFBRUUsT0FBT0ssYUFFdEJULEdBQUVRLEdBQVFGLEtBQ05DLFFBQVcsU0FHZlAsRUFBRSxVQUFVTSxLQUNSQyxRQUFXLFdBb0NmbEMsU0FBU3FDLFNBQVNDLFNBQVMsV0FDM0JmLElBQ0FDLElBQ0FDLElBQ0FDO0FDckVSLGNBQUMsV0FFRyxHQUNJbEMsR0FHQStDLEVBSkFDLEVBQVd0QixLQUFLdUIsTUFBTXJFLGFBQUEsaUJBRXRCc0UsRUFBTWYsRUFBRSxPQUNSZ0IsRUFBYWhCLEVBQUUsd0JBR25CZ0IsR0FBV2YsTUFBTSxTQUFVQyxHQUN2QixHQUFJZSxHQUFPNUMsU0FBUzZDLE1BQ3BCN0MsVUFBUzhDLE9BQVVGLEVBQW5CLGlCQUdKRixFQUFJSyxPQUFPSixHQUVYM0UsU0FBU2lCLElBQVQsU0FBc0J1RCxFQUFTekQsS0FBT0csS0FBSyxRQUFTLFNBQVVDLEdBQzFESyxFQUFPTCxFQUFLSSxNQUFNQyxLQUNsQitDLEVBQWNaLEVBQUUsMEJBRVpuQyxHQUFRLElBQ1JVLFFBQVFDLElBQUksbUNBRVpvQyxFQUFZWCxNQUFNLFNBQVVDLEdBQ3hCM0IsUUFBUUMsSUFBSSxLQUVaLElBQUk2QyxHQUFPbkIsRUFBRUUsT0FBT2tCLFVBQVVDLGNBQzFCTixFQUFPNUMsU0FBUzZDLE1BRXBCN0MsVUFBUzhDLE9BQVVGLEVBQW5CLElBQTJCSSxFQUEzQixXQUdKTixFQUFJSyxPQUFPUiIsImZpbGUiOiJzY3JpcHRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGNvbmZpZyA9IHtcclxuICAgIGFwaUtleTogXCJBSXphU3lDUmZScDIwa0VrcHdPMUJzMzBzRHlCa0M0UWYtcnN1Tk1cIixcclxuICAgIGF1dGhEb21haW46IFwiY291cnNlLWZpbGUtYXVkaXRvci5maXJlYmFzZWFwcC5jb21cIixcclxuICAgIGRhdGFiYXNlVVJMOiBcImh0dHBzOi8vY291cnNlLWZpbGUtYXVkaXRvci5maXJlYmFzZWlvLmNvbVwiLFxyXG4gICAgc3RvcmFnZUJ1Y2tldDogXCJjb3Vyc2UtZmlsZS1hdWRpdG9yLmFwcHNwb3QuY29tXCIsXHJcbn07XHJcbmZpcmViYXNlLmluaXRpYWxpemVBcHAoY29uZmlnKTtcclxuXHJcbnZhciBkYXRhYmFzZSA9IGZpcmViYXNlLmRhdGFiYXNlKCk7XG4iLCIoZnVuY3Rpb24gKCkge1xyXG5cclxuICAgIGZ1bmN0aW9uIHRvZ2dsZVNpZ25JbigpIHtcclxuICAgICAgICBpZiAoIWZpcmViYXNlLmF1dGgoKS5jdXJyZW50VXNlcikge1xyXG4gICAgICAgICAgICB2YXIgcHJvdmlkZXIgPSBuZXcgZmlyZWJhc2UuYXV0aC5Hb29nbGVBdXRoUHJvdmlkZXIoKTtcclxuXHJcbiAgICAgICAgICAgIHByb3ZpZGVyLmFkZFNjb3BlKCdodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL3BsdXMubG9naW4nKTtcclxuICAgICAgICAgICAgcHJvdmlkZXIuYWRkU2NvcGUoJ3Byb2ZpbGUnKTtcclxuICAgICAgICAgICAgcHJvdmlkZXIuYWRkU2NvcGUoJ2VtYWlsJyk7XHJcbiAgICAgICAgICAgIGZpcmViYXNlLmF1dGgoKS5zaWduSW5XaXRoUmVkaXJlY3QocHJvdmlkZXIpO1xyXG5cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnTWFuYWdlbWVudEF1dGhPJyk7XHJcbiAgICAgICAgICAgIGZpcmViYXNlLmF1dGgoKS5zaWduT3V0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdxdWlja3N0YXJ0LXNpZ24taW4nKS5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gc2V0Um9sZSh1aWQsIGZ1bmMpIHtcclxuICAgICAgICBkYXRhYmFzZS5yZWYoXCJ1c2Vyc1wiKS5vbmNlKFwidmFsdWVcIiwgZnVuY3Rpb24gKHNuYXApIHtcclxuICAgICAgICAgICAgc25hcC5mb3JFYWNoKGZ1bmN0aW9uIChjc25hcCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKGNzbmFwLmtleSA9PT0gdWlkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFjc25hcC52YWwoKS5yb2xlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmMoKTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBpbml0QXBwKCkge1xyXG4gICAgICAgIGZpcmViYXNlLmF1dGgoKS5nZXRSZWRpcmVjdFJlc3VsdCgpLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICBpZiAocmVzdWx0LmNyZWRlbnRpYWwpIHtcclxuICAgICAgICAgICAgICAgIC8vIFRoaXMgZ2l2ZXMgeW91IGEgR29vZ2xlIEFjY2VzcyBUb2tlbi4gWW91IGNhbiB1c2UgaXQgdG8gYWNjZXNzIHRoZSBHb29nbGUgQVBJLlxyXG4gICAgICAgICAgICAgICAgdmFyIHRva2VuID0gcmVzdWx0LmNyZWRlbnRpYWwuYWNjZXNzVG9rZW47XHJcbiAgICAgICAgICAgICAgICBsb2NhdGlvbi5yZWxvYWQoKTtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRva2VuKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuLy8gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3Rva2VuIG51bGwnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgdXNlciA9IHJlc3VsdC51c2VyO1xyXG4gICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikge1xyXG4gICAgICAgICAgICB2YXIgZXJyb3JDb2RlID0gZXJyb3IuY29kZSxcclxuICAgICAgICAgICAgICAgIGVycm9yTWVzc2FnZSA9IGVycm9yLm1lc3NhZ2UsXHJcbiAgICAgICAgICAgICAgICBlbWFpbCA9IGVycm9yLmVtYWlsLFxyXG4gICAgICAgICAgICAgICAgY3JlZGVudGlhbCA9IGVycm9yLmNyZWRlbnRpYWw7XHJcblxyXG4gICAgICAgICAgICBpZiAoZXJyb3JDb2RlID09PSAnYXV0aC9hY2NvdW50LWV4aXN0cy13aXRoLWRpZmZlcmVudC1jcmVkZW50aWFsJykge1xyXG4gICAgICAgICAgICAgICAgYWxlcnQoJ1lvdSBoYXZlIGFscmVhZHkgc2lnbmVkIHVwIHdpdGggYSBkaWZmZXJlbnQgYXV0aCBwcm92aWRlciBmb3IgdGhhdCBlbWFpbC4nKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgZmlyZWJhc2UuYXV0aCgpLm9uQXV0aFN0YXRlQ2hhbmdlZChmdW5jdGlvbiAodXNlcikge1xyXG4gICAgICAgICAgICBpZiAodXNlcikge1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciBhdXRoTyA9IHtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5TmFtZTogdXNlci5kaXNwbGF5TmFtZSxcclxuICAgICAgICAgICAgICAgICAgICBlbWFpbDogdXNlci5lbWFpbCxcclxuICAgICAgICAgICAgICAgICAgICBlbWFpbFZlcmlmaWVkOiB1c2VyLmVtYWlsVmVyaWZpZWQsXHJcbiAgICAgICAgICAgICAgICAgICAgcGhvdG9VUkw6IHVzZXIucGhvdG9VUkwsXHJcbiAgICAgICAgICAgICAgICAgICAgdWlkOiB1c2VyLnVpZFxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdxdWlja3N0YXJ0LXNpZ24taW4nKS50ZXh0Q29udGVudCA9ICdTaWduIG91dCc7XHJcblxyXG4gICAgICAgICAgICAgICAgZGF0YWJhc2UucmVmKGB1c2Vycy8ke2F1dGhPLnVpZH1gKS51cGRhdGUoe1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXlOYW1lOiBhdXRoTy5kaXNwbGF5TmFtZSxcclxuICAgICAgICAgICAgICAgICAgICBlbWFpbDogYXV0aE8uZW1haWwsXHJcbiAgICAgICAgICAgICAgICAgICAgZW1haWxWZXJpZmllZDogYXV0aE8uZW1haWxWZXJpZmllZCxcclxuICAgICAgICAgICAgICAgICAgICBwaG90b1VSTDogYXV0aE8ucGhvdG9VUkwsXHJcbiAgICAgICAgICAgICAgICAgICAgdWlkOiBhdXRoTy51aWQsXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICBzZXRSb2xlKGF1dGhPLnVpZCwgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YWJhc2UucmVmKGB1c2Vycy8ke2F1dGhPLnVpZH1gKS51cGRhdGUoe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByb2xlOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlW1wiTWFuYWdlbWVudEF1dGhPXCJdID0gSlNPTi5zdHJpbmdpZnkoYXV0aE8pO1xyXG5cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdxdWlja3N0YXJ0LXNpZ24taW4nKS50ZXh0Q29udGVudCA9ICdTaWduIGluIHdpdGggR29vZ2xlJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncXVpY2tzdGFydC1zaWduLWluJykuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncXVpY2tzdGFydC1zaWduLWluJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0b2dnbGVTaWduSW4sIGZhbHNlKTtcclxuICAgIH1cclxuXHJcbiAgICB3aW5kb3cub25sb2FkID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGluaXRBcHAoKTtcclxuICAgIH1cclxuXHJcbn0oKSlcclxuIiwiLypcclxuZGF0YWJhc2UgaXMgYSBnbG9iYWwgdmFyaWFibGVcclxuKi9cclxuXHJcbihmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgLypcclxuICAgIEV2ZW50cyB0byBoYW5kbGUgbW9kYWxzXHJcbiAgICAqL1xyXG4gICAgJChcImFcIikuY2xpY2soZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICB2YXIgY2xhc3NJRCA9IGUudGFyZ2V0LmNsYXNzTmFtZTtcclxuXHJcbiAgICAgICAgJChgIyR7Y2xhc3NJRH1gKS5jc3Moe1xyXG4gICAgICAgICAgICBcImRpc3BsYXlcIjogXCJibG9ja1wiXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgJChgI3NoYWRlYCkuY3NzKHtcclxuICAgICAgICAgICAgXCJkaXNwbGF5XCI6IFwiYmxvY2tcIlxyXG4gICAgICAgIH0pXHJcbiAgICB9KVxyXG5cclxuICAgICQoXCIuY2FuY2VsXCIpLmNsaWNrKGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgdmFyIHBhcmVudCA9IGUudGFyZ2V0LnBhcmVudEVsZW1lbnQ7XHJcblxyXG4gICAgICAgICQocGFyZW50KS5jc3Moe1xyXG4gICAgICAgICAgICBcImRpc3BsYXlcIjogXCJub25lXCIsXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgJCgnI3NoYWRlJykuY3NzKHtcclxuICAgICAgICAgICAgXCJkaXNwbGF5XCI6IFwibm9uZVwiLFxyXG4gICAgICAgIH0pXHJcbiAgICB9KVxyXG5cclxuICAgIC8qXHJcbiAgICBSdW5zIHRoZSBkYXRhIGZvciB0aGUgY2hlY2tlZCBNb2RhbFxyXG4gICAgKi9cclxuICAgIGZ1bmN0aW9uIGNoZWNrZWQoKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJjaGVja2VkXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qXHJcbiAgICBSdW5zIHRoZSBkYXRhIGZvciB0aGUgZmluaXNoZWQgbW9kYWxcclxuICAgICovXHJcbiAgICBmdW5jdGlvbiBmaW5pc2hlZCgpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcImZpbmlzaGVkXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qXHJcbiAgICBSZXRyaWV2ZSB0aGUgZGF0YSBmb3IgYW1vdW50IG9mIGRhdGEgc2F2ZWQgaW4gRXF1ZWxsYVxyXG4gICAgKi9cclxuICAgIGZ1bmN0aW9uIGRhdGFTYXZlZCgpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcImRhdGFTYXZlZFwiKTtcclxuICAgIH1cclxuXHJcbiAgICAvKlxyXG4gICAgUmV0cmlldmUgdGhlIGRhdGEgZm9yIGFtb3VudCBvZiB0aW1lIHNwZW50XHJcbiAgICAqL1xyXG4gICAgZnVuY3Rpb24gdGltZVNwZW50KCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwidGltZVNwZW50XCIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qXHJcbiAgICBEZXRlcm1pbmUgdGhhdCB0aGUgbG9jYXRpb24gaXMgdGhlIGFkbWluIHBhZ2UgYW5kIGxvYWQgXHJcbiAgICBhbGwgb2YgdGhlIGRhdGEgd2l0aCB0aGUgYWRtaW5pc3RyYXRvciByb2xlLlxyXG4gICAgKi9cclxuICAgIGlmIChsb2NhdGlvbi5wYXRobmFtZS5pbmNsdWRlcyhcImFkbWluXCIpKSB7XHJcbiAgICAgICAgY2hlY2tlZCgpO1xyXG4gICAgICAgIGZpbmlzaGVkKCk7XHJcbiAgICAgICAgZGF0YVNhdmVkKCk7XHJcbiAgICAgICAgdGltZVNwZW50KCk7XHJcbiAgICB9XHJcblxyXG59KCkpOyIsIihmdW5jdGlvbiAoKSB7XG5cbiAgICB2YXIgYXV0aERhdGEgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZVsnTWFuYWdlbWVudEF1dGhPJ10pLFxuICAgICAgICByb2xlLFxuICAgICAgICBuYXYgPSAkKFwibmF2XCIpLFxuICAgICAgICBob21lQnV0dG9uID0gJChcIjxidXR0b24+SG9tZTwvYnV0dG9uPlwiKSxcbiAgICAgICAgYWRtaW5CdXR0b247XG5cbiAgICBob21lQnV0dG9uLmNsaWNrKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIHZhciByb290ID0gbG9jYXRpb24ub3JpZ2luO1xuICAgICAgICBsb2NhdGlvbi5hc3NpZ24oYCR7cm9vdH0vaW5kZXguaHRtbGApO1xuICAgIH0pO1xuXG4gICAgbmF2LmFwcGVuZChob21lQnV0dG9uKTtcblxuICAgIGRhdGFiYXNlLnJlZihgdXNlcnMvJHthdXRoRGF0YS51aWR9YCkub25jZShcInZhbHVlXCIsIGZ1bmN0aW9uIChzbmFwKSB7XG4gICAgICAgIHJvbGUgPSBzbmFwLnZhbCgpLnJvbGUsXG4gICAgICAgIGFkbWluQnV0dG9uID0gJChcIjxidXR0b24+QWRtaW48L2J1dHRvbj5cIik7XG5cbiAgICAgICAgaWYgKHJvbGUgPj0gOCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJVc2VyIGxvZ2dlZCBpbiBpcyBBZG1pbmlzdHJhdG9yXCIpO1xuXG4gICAgICAgICAgICBhZG1pbkJ1dHRvbi5jbGljayhmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwibGlcIilcblxuICAgICAgICAgICAgICAgIHZhciBwYWdlID0gZS50YXJnZXQuaW5uZXJUZXh0LnRvTG93ZXJDYXNlKCksXG4gICAgICAgICAgICAgICAgICAgIHJvb3QgPSBsb2NhdGlvbi5vcmlnaW47XG5cbiAgICAgICAgICAgICAgICBsb2NhdGlvbi5hc3NpZ24oYCR7cm9vdH0vJHtwYWdlfS5odG1sYCk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgbmF2LmFwcGVuZChhZG1pbkJ1dHRvbik7XG4gICAgICAgIH1cbiAgICB9KTtcbn0oKSk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
